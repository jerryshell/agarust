// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Packet {
    #[prost(oneof = "packet::Data", tags = "1, 2, 3, 4, 5")]
    pub data: ::core::option::Option<packet::Data>,
}
/// Nested message and enum types in `Packet`.
pub mod packet {
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Data {
        #[prost(message, tag = "1")]
        Hello(super::Hello),
        #[prost(message, tag = "2")]
        Chat(super::Chat),
        #[prost(message, tag = "3")]
        UpdatePlayer(super::UpdatePlayer),
        #[prost(message, tag = "4")]
        UpdatePlayerBatch(super::UpdatePlayerBatch),
        #[prost(message, tag = "5")]
        UpdatePlayerDirectionAngle(super::UpdatePlayerDirectionAngle),
    }
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Hello {
    #[prost(string, tag = "1")]
    pub connection_id: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Chat {
    #[prost(string, tag = "1")]
    pub connection_id: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub msg: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UpdatePlayer {
    #[prost(string, tag = "1")]
    pub connection_id: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(double, tag = "3")]
    pub x: f64,
    #[prost(double, tag = "4")]
    pub y: f64,
    #[prost(double, tag = "5")]
    pub radius: f64,
    #[prost(double, tag = "6")]
    pub direction_angle: f64,
    #[prost(double, tag = "7")]
    pub speed: f64,
    #[prost(int32, tag = "8")]
    pub color: i32,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UpdatePlayerBatch {
    #[prost(message, repeated, tag = "1")]
    pub update_player_batch: ::prost::alloc::vec::Vec<UpdatePlayer>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct UpdatePlayerDirectionAngle {
    #[prost(double, tag = "1")]
    pub direction_angle: f64,
}
